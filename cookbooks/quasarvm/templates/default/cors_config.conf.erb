<% if node['nginx']['cors']['enabled'] -%>
if ($http_origin ~* (<%= node['nginx']['cors']['origins'] %>)) {
  set $cors "true";
}

# OPTIONS indicates a CORS pre-flight request
if ($request_method = 'OPTIONS') {
  set $cors "${cors}options";
}

# non-OPTIONS indicates a normal CORS request
<% if node['nginx']['cors']['methods'].include? 'GET' -%>
if ($request_method = 'GET') {
  set $cors "${cors}get";
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'POST' -%>
if ($request_method = 'POST') {
  set $cors "${cors}post";
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'PUT' -%>
if ($request_method = 'PUT') {
  set $cors "${cors}put";
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'DELETE' -%>
if ($request_method = 'DELETE') {
  set $cors "${cors}delete";
}
<% end -%>

# if it's an allowed request, set the standard CORS responses header
<% if node['nginx']['cors']['methods'].include? 'GET' -%>
if ($cors = "trueget") {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Max-Age' 1728000 always;
  add_header 'Access-Control-Allow-Methods' '<%= node['nginx']['cors']['methods'].join(",") %>' always;
  add_header 'Access-Control-Allow-Headers' '<%= node['nginx']['cors']['headers'] %>' always;
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'POST' -%>
if ($cors = "truepost") {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Max-Age' 1728000 always;
  add_header 'Access-Control-Allow-Methods' '<%= node['nginx']['cors']['methods'].join(",") %>' always;
  add_header 'Access-Control-Allow-Headers' '<%= node['nginx']['cors']['headers'] %>' always;
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'PUT' -%>
if ($cors = "trueput") {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Max-Age' 1728000 always;
  add_header 'Access-Control-Allow-Methods' '<%= node['nginx']['cors']['methods'].join(",") %>' always;
  add_header 'Access-Control-Allow-Headers' '<%= node['nginx']['cors']['headers'] %>' always;
}
<% end -%>
<% if node['nginx']['cors']['methods'].include? 'DELETE' -%>
if ($cors = "truedelete") {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Max-Age' 1728000 always;
  add_header 'Access-Control-Allow-Methods' '<%= node['nginx']['cors']['methods'].join(",") %>' always;
add_header 'Access-Control-Allow-Headers' '<%= node['nginx']['cors']['headers'] %>' always;
}
<% end -%>

# if it's OPTIONS, for a CORS preflight request, then respond immediately with no response body
if ($cors = "trueoptions") {
  add_header 'Access-Control-Allow-Origin' "$http_origin";
  add_header 'Access-Control-Allow-Credentials' 'true';

  # Tell browser to cache this pre-flight info for 20 days
  add_header 'Access-Control-Max-Age' 1728000;

  # Tell browser which methods (e.g. GET,POST,OPTIONS) to respond to for CORS requests.
  add_header 'Access-Control-Allow-Methods' '<%= node['nginx']['cors']['methods'].join(",") %>';

  # Tell browser we accept these headers in the actual request
  add_header 'Access-Control-Allow-Headers' '<%= node['nginx']['cors']['headers'] %>';

  # build entire response to the preflight request
  # no body in this response
  add_header 'Content-Length' 0;

  # (should not be necessary, but included for non-conforming browsers)
  add_header 'Content-Type' 'text/plain charset=UTF-8';

  # indicate successful return with no content
  return 204;
}
<% end -%>